SAML 2.0 HTTP POST Binding
==========================
This is an attempt to clarify the web conversation that takes place
in the HTTP POST Binding example, at [http://en.wikipedia.org/wiki/SAML_2.0.]

Whole numbers are from that example.
Dotted numbers are my attempt to fill in the gaps where things are unspecified.

HOW IT WORKS - STEP BY STEP
===========================
NOTE: All replies go to the Browser.

1 - Browser sends GET request for Resource to SP.
1.1 - SP determines that User is not logged in. (No cookie, I guess.)
1.2 - SP replies to with IDP selection form.
1.3 - Browser POSTs IDP selection to SP.
2 - SP replies with XHTML SSO Request Form.
3 - Browser POSTs SSO Request Form to IDP.
3.1 - IDP determines that User is not logged in. (No cookie, I guess.)
3.2 - IDP replies with Login Form.
3.3 - Browser POSTs Login Form to IDP.
3.4 - IDP checks credentials and logs in User. (Sets a cookie, I guess.)
4 - IDP replies with XHTML SSO Assertion Form.
5 - Browser POSTs SSO Assertion to SP.
5.1 - SP verifies that the Assertion is valid.
5.2 - SP verifies that the User account is/can be Provisioned. (HOW?)
5.3 - SP logs in the User. (Sets a cookie, I guess.)
6 - SP replies with an HTTP Redirect (redirecting to the Resource).
7 - Browser sends GET request for Resource to SP (second time).
7.1 - SP determines that the User is logged in. (Cookie is valid.)
8 - SP replies with the Resource.

ABOUT METADATA
==============
For the initial implementation, we will rely on hard-coded metadata.
However, proper SAML 2.0 implementation requires that we will have to
have a way to configure metadata and expose it.
